@model IEnumerable<CartViewModel>
@{
    //ViewBag.Title = "CartContent";
    var cartProds = ViewBag.cartProducts as IEnumerable<ProductViewModel>;
    decimal orderTotal = 0;
}
<!-- Cart content -->
<div class="container">
    <div class="row">
        <div class="col-lg-10 offset-lg-1">
            <div class="cart_container">
                <div class="cart_title">Shopping Cart</div>




                <div class="cart_items">
                    <ul class="cart_list">
                        @foreach (var item in Model)
                        {
                            var P = cartProds.SingleOrDefault(i => i.Id == item.ProductId);
                            <li class="cart_item clearfix">
                                <div class="cart_item_image"><img src="data:image/png;base64,@P.Image" alt=""></div>
                                <div class="cart_item_info d-flex flex-md-row flex-column justify-content-between">
                                    <div class="cart_item_name cart_info_col">
                                        <div class="cart_item_title">Name</div>
                                        <div class="cart_item_text">@P.Name</div>
                                    </div>
                                    <div class="cart_item_quantity cart_info_col">
                                        <div class="cart_item_title">Quantity</div>
                                        <div class="cart_item_text">@item.Quantity</div>

                                    </div>
                                    <div class="cart_item_price cart_info_col">
                                        <div class="cart_item_title">Price</div>
                                        <div class="cart_item_text">@P.Price.ToString("0.#####") LE</div>
                                    </div>
                                    <div class="cart_item_total cart_info_col">
                                        <div class="cart_item_title">Total</div>
                                        <div class="cart_item_text">@((P.Price * item.Quantity).ToString("0.#####")) LE</div>
                                    </div>
                                </div>
                                <div class="cart_item_btn" @*style="width: 200px; float: right; margin: 20px 0; padding: 5px; "*@>
                                    @Ajax.ActionLink("Edit", "EditCart", "Cart", routeValues: new { id = item.ProductId }, htmlAttributes: new { @class = "btn btn-info" }, ajaxOptions: new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "editCart", InsertionMode = InsertionMode.Replace, OnSuccess = "EditToggle()" })  @Ajax.ActionLink("Remove", "DeleteCart", "Cart", routeValues: new { id = item.ProductId }, htmlAttributes: new { @class = "btn btn-danger" }, ajaxOptions: new AjaxOptions { HttpMethod = "Get", UpdateTargetId = "Cart", InsertionMode = InsertionMode.Replace, OnSuccess = "UpdateCartCounter();" })
                                </div>
                            </li>
                            orderTotal += P.Price * item.Quantity;
                        }
                    </ul>
                </div>

                <!-- Order Total -->
                <div class="order_total">
                    <div class="order_total_content text-md-right">
                        <div class="order_total_title">Total Price</div>
                        <div class="order_total_amount">@orderTotal.ToString("0.#####") LE</div>
                    </div>
                </div>

                <div class="cart_buttons">
                    @if (Model.Count() > 0)
                    {
                        <button type="button" id="confirmOrderBtn" class="button cart_button_checkout" onclick="location.href = '@Url.Action("OrderData" ,"Order")';UpdateCartCounter()">Check out</button>
                        @*<button type="button" id="confirmOrderBtn" class="button cart_button_checkout" onclick="location.href = '@Url.Action("PaymentWithPaypal" ,"Cart")';UpdateCartCounter()">Check out Paypal</button>*@
                    }
                </div>
            </div>
        </div>
    </div>
</div>
